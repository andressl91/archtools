1. First update pacman.conf in root directory to point 
   to chroot relative pacman.d and pacman.conf
 
2. First time with pacman
(Tip! If it doesnt't work, also specify --gpgdir to .../armroot/ in .conf if not done)
pacman-key --init --config /path/to/armroot/etc/pacman.conf


3. I DON'T REMEMBER, but this might be nescecarry
pacman-key --populate archlinuxarm   
(keys located at /usr/share/pacman/keyrings)
(Should use same build keys, but in case I copied archlinuxarm to local and run command)


4. Not you should be able to run
sudo pacman -S htop --config /home/jackal/chroot/etc/pacman.conf

# Tips from website: https://archlinuxarm.org/forum/viewtopic.php?t=6163
Setting its root and other dirs to toolchain sysroot and subdirs and using a modified config through a wrapper script, pacman can simply install all the needed dependencies (pacman-arm -Sydd dep1 dep2) without any further dependency resolving since only header files and shared objects are needed anyway.

However, even now some limitations remain. Host needs all dependencies and build-dependencies installed, too. And if any build-dependency tries to modify binaries or something, then all will almost definitively fail. And if the Makefile does crazy things, then cross-compiling might fail. I think I'll do some further research, refine this method and maybe write a complete guide for those interested.



######################### EXPERMIENT ############################
https://wiki.archlinux.org/index.php/DeveloperWiki:Building_in_a_clean_chroot

Interesting stuff:

# To make clean archroot
mkarchroot $CHROOT/root base-devel
# Then guide says
Edit ~/.makepkg.conf to set the packager name and any makeflags. Also adjust the mirrorlist in $CHROOT/root/etc/pacman.d/mirrorlist and enable the testing repository in $CHROOT/root/etc/pacman.conf, if desired.


# BUT, we can specify custom pacman.conf and makepkg.conf upon creation of the clean chroot
Custom pacman.conf

Alternatively, provide a custom pacman.conf and makepkg.conf with the following:

$ mkarchroot -C <pacman.conf> -M <makepkg.conf> $CHROOT/root base-devel

Warning: Using a custom pacman.conf or makepkg.conf during the initial creation of clean chroot can result in unintended custom adjustments to the chroot environment. Use with caution.

## WE CAN NOW WORK IN THIS WAY:
Building in the chroot
Firstly, make sure the base chroot ($CHROOT/root) is up to date:

# In general, it seams to run commands in chroot
$ arch-nspawn $CHROOT/root pacman -Syu

Then, build a package by calling makechrootpkg in the directory containing its PKGBUILD:
$ makechrootpkg -c -r $CHROOT

